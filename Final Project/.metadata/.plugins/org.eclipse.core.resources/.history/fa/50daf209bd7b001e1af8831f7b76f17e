/*
 * ControlECU.c
 *
 *  Created on: Nov 4, 2023
 *      Author: Dell-G5
 */
#include"dcmotor.h"
#include"external_eeprom.h";
#include"HAL/buzzer.h"
#include"MCAL/uart.h"
#include"MCAL/timer1.h"
#include"MCAL/twi.h"
#define PASSWORD_LENGTH 5

uint8 eeprom_password[PASSWORD_LENGTH];
uint8 current_password[PASSWORD_LENGTH];
uint8 incorrect_attempts = 0;
uint8 locked = 0; // 0 for unlocked, 1 for locked

void Timer1_Callback(void) {
    // Implement the logic to control the motor and door locking/unlocking
}

int main(void) {
    // Initialize hardware components and communication interfaces
    DcMotor_init();
    Buzzer_init();
    UART_ConfigType uartConfig = { _8_BIT, PARITY_DISABLED, STOP_1_BIT, 9600 };
    UART_init(&uartConfig);
    Timer1_ConfigType timer1Config = { 0, 62500, FCPU_256, CTC_OCR1A };
    Timer1_init(&timer1Config);
    TWI_ConfigType twiConfig = { 0, NORMAL_MODE_100Kb };
    TWI_init(&twiConfig);
    EEPROM_Init();

    // Load the password from EEPROM
    eeprom_read_block(eeprom_password, (void *)0, PASSWORD_LENGTH);

    Timer1_setCallBack(Timer1_Callback);

    while (1) {
        if (locked) {
            // System is locked, no keypad input accepted
            // Activate the buzzer and display an error message
            Buzzer_on();
            // Display error message on LCD (implement LCD functions)
            // Delay for 1 minute
            _delay_ms(60000);
            Buzzer_off();
            // Unlock the system
            locked = 0;
        } else {
            // System is unlocked, accept keypad input
            // Implement the logic for Steps 1, 3, and 4
            // Handle password verification, door opening, and password changing
            // Implement the logic for Step 5
            // Handle incorrect password attempts, activating the buzzer, and locking the system
        }
    }

    return 0;
}
